/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Alyssa
 */
public class MortgageCalculator extends javax.swing.JFrame {

    /**
     * Creates new form MortgageCalculator
     */
    public MortgageCalculator() {
        initComponents();
        setResizable(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainLabel = new javax.swing.JLabel();
        HP = new javax.swing.JLabel();
        DP = new javax.swing.JLabel();
        LT = new javax.swing.JLabel();
        IR = new javax.swing.JLabel();
        SD = new javax.swing.JLabel();
        MonthBox = new javax.swing.JComboBox<>();
        IRField = new javax.swing.JTextField();
        LTField = new javax.swing.JTextField();
        DPField = new javax.swing.JTextField();
        HPField = new javax.swing.JTextField();
        SDField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        calcButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        mpLabel = new javax.swing.JLabel();
        Box1 = new javax.swing.JComboBox<>();
        numMPLabel = new javax.swing.JLabel();
        totalInterestLabel = new javax.swing.JLabel();
        mPayoffLabel = new javax.swing.JLabel();
        closeButton = new javax.swing.JButton();
        mPayoffLabel1 = new javax.swing.JLabel();
        totalInterestLabel1 = new javax.swing.JLabel();
        numMPLabel1 = new javax.swing.JLabel();
        mpLabel1 = new javax.swing.JLabel();
        homePriceLabel = new javax.swing.JLabel();
        loanAmountLabel = new javax.swing.JLabel();
        downPaymentLabel = new javax.swing.JLabel();
        homePriceLabel1 = new javax.swing.JLabel();
        loanAmountLabel1 = new javax.swing.JLabel();
        downPaymentLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        MainLabel.setFont(new java.awt.Font("Nunito", 1, 36)); // NOI18N
        MainLabel.setForeground(new java.awt.Color(238, 239, 239));
        MainLabel.setText("Mortgage Calculator");
        getContentPane().add(MainLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        HP.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        HP.setForeground(new java.awt.Color(27, 45, 74));
        HP.setText("Home Price");
        getContentPane().add(HP, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 240, -1, -1));

        DP.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        DP.setForeground(new java.awt.Color(27, 45, 74));
        DP.setText("Down Payment");
        getContentPane().add(DP, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 280, -1, -1));

        LT.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        LT.setForeground(new java.awt.Color(27, 45, 74));
        LT.setText("Loan Term");
        getContentPane().add(LT, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 320, -1, -1));

        IR.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        IR.setForeground(new java.awt.Color(27, 45, 74));
        IR.setText("Interest Rate (%)");
        getContentPane().add(IR, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 360, -1, -1));

        SD.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        SD.setForeground(new java.awt.Color(27, 45, 74));
        SD.setText("Start Date");
        getContentPane().add(SD, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 400, -1, -1));

        MonthBox.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        MonthBox.setForeground(new java.awt.Color(27, 45, 74));
        MonthBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" }));
        getContentPane().add(MonthBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 400, 70, -1));

        IRField.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        IRField.setForeground(new java.awt.Color(27, 45, 74));
        IRField.setText("6.7");
        IRField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                IRFieldFocusLost(evt);
            }
        });
        IRField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                IRFieldKeyPressed(evt);
            }
        });
        getContentPane().add(IRField, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 360, 160, -1));

        LTField.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        LTField.setForeground(new java.awt.Color(27, 45, 74));
        LTField.setText("30");
        LTField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                LTFieldFocusLost(evt);
            }
        });
        LTField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                LTFieldKeyPressed(evt);
            }
        });
        getContentPane().add(LTField, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 320, 80, -1));

        DPField.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        DPField.setForeground(new java.awt.Color(27, 45, 74));
        DPField.setText("20");
        DPField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                DPFieldFocusLost(evt);
            }
        });
        DPField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DPFieldKeyPressed(evt);
            }
        });
        getContentPane().add(DPField, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 280, 80, -1));

        HPField.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        HPField.setForeground(new java.awt.Color(27, 45, 74));
        HPField.setText("400000");
        HPField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                HPFieldFocusLost(evt);
            }
        });
        HPField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                HPFieldKeyPressed(evt);
            }
        });
        getContentPane().add(HPField, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 240, 160, -1));

        SDField.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        SDField.setForeground(new java.awt.Color(27, 45, 74));
        SDField.setText("2024");
        SDField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                SDFieldFocusLost(evt);
            }
        });
        SDField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SDFieldKeyPressed(evt);
            }
        });
        getContentPane().add(SDField, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 400, 80, -1));

        jLabel1.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(27, 45, 74));
        jLabel1.setText("years");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 320, -1, -1));

        calcButton.setBackground(new java.awt.Color(158, 191, 183));
        calcButton.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        calcButton.setForeground(new java.awt.Color(27, 45, 74));
        calcButton.setText("Calculate");
        calcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcButtonActionPerformed(evt);
            }
        });
        getContentPane().add(calcButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 460, -1, -1));

        clearButton.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        clearButton.setForeground(new java.awt.Color(27, 45, 74));
        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        getContentPane().add(clearButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 460, 80, -1));

        mpLabel.setFont(new java.awt.Font("Nunito", 1, 36)); // NOI18N
        mpLabel.setForeground(new java.awt.Color(27, 45, 74));
        mpLabel.setText("Monthly Pay:");
        getContentPane().add(mpLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 180, -1, -1));

        Box1.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        Box1.setForeground(new java.awt.Color(27, 45, 74));
        Box1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "%", "$" }));
        getContentPane().add(Box1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 280, 70, -1));

        numMPLabel.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        numMPLabel.setForeground(new java.awt.Color(27, 45, 74));
        numMPLabel.setText("Total of 360 Mortgage Payments");
        getContentPane().add(numMPLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 360, -1, -1));

        totalInterestLabel.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        totalInterestLabel.setForeground(new java.awt.Color(27, 45, 74));
        totalInterestLabel.setText("Total Interest");
        getContentPane().add(totalInterestLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 400, -1, -1));

        mPayoffLabel.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        mPayoffLabel.setForeground(new java.awt.Color(27, 45, 74));
        mPayoffLabel.setText("Mortgage Payoff Date");
        getContentPane().add(mPayoffLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 440, -1, -1));

        closeButton.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        closeButton.setText("Return");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        getContentPane().add(closeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 10, -1, -1));

        mPayoffLabel1.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        mPayoffLabel1.setForeground(new java.awt.Color(27, 45, 74));
        mPayoffLabel1.setText("Jan 2054");
        getContentPane().add(mPayoffLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 440, -1, -1));

        totalInterestLabel1.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        totalInterestLabel1.setForeground(new java.awt.Color(27, 45, 74));
        totalInterestLabel1.setText("$423,362.19");
        getContentPane().add(totalInterestLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 400, -1, -1));

        numMPLabel1.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        numMPLabel1.setForeground(new java.awt.Color(27, 45, 74));
        numMPLabel1.setText("$743,362.19");
        getContentPane().add(numMPLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 360, -1, -1));

        mpLabel1.setFont(new java.awt.Font("Nunito", 1, 36)); // NOI18N
        mpLabel1.setForeground(new java.awt.Color(27, 45, 74));
        mpLabel1.setText("$2,064.90");
        getContentPane().add(mpLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 180, -1, -1));

        homePriceLabel.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        homePriceLabel.setForeground(new java.awt.Color(27, 45, 74));
        homePriceLabel.setText("Home Price");
        getContentPane().add(homePriceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 240, -1, -1));

        loanAmountLabel.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        loanAmountLabel.setForeground(new java.awt.Color(27, 45, 74));
        loanAmountLabel.setText("Loan Amount");
        getContentPane().add(loanAmountLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 280, -1, -1));

        downPaymentLabel.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        downPaymentLabel.setForeground(new java.awt.Color(27, 45, 74));
        downPaymentLabel.setText("Down Payment");
        getContentPane().add(downPaymentLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 320, -1, -1));

        homePriceLabel1.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        homePriceLabel1.setForeground(new java.awt.Color(27, 45, 74));
        homePriceLabel1.setText("$400,000.00");
        getContentPane().add(homePriceLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 240, -1, -1));

        loanAmountLabel1.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        loanAmountLabel1.setForeground(new java.awt.Color(27, 45, 74));
        loanAmountLabel1.setText("$320,000.00");
        getContentPane().add(loanAmountLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 280, -1, -1));

        downPaymentLabel1.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        downPaymentLabel1.setForeground(new java.awt.Color(27, 45, 74));
        downPaymentLabel1.setText("$80,000.00");
        getContentPane().add(downPaymentLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 320, -1, -1));

        jLabel2.setForeground(new java.awt.Color(27, 45, 74));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MortgageBkgResized.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1250, 700));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void HPFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_HPFieldKeyPressed
        // if "enter" key pressed, check if input is valid
        // if all fields have an input, enable calcButton
        if (evt.getKeyCode() == 10) {
            if (HPField.getText().strip().compareTo("") != 0) {
               if (! (MainHelper.isValidNumber(HPField.getText().replaceAll(",", "")))
                       || MainHelper.isZeroS(HPField.getText().replaceAll(",", ""))){
                    HPField.setText("");
                    HPField.requestFocus();
                    calcButton.setEnabled(false);
                    setResultsLabelsNotVisible();
  
                } 
               else {
                    DPField.requestFocus();
                    if (allFieldsHaveValue()) {
                        calcButton.setEnabled(true);
                    } 
               }
            }
        }
    }//GEN-LAST:event_HPFieldKeyPressed

    private void calcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcButtonActionPerformed
        // whole function is the "calculator part"
        float hp = Float.parseFloat(HPField.getText().replaceAll(",", ""));
        float dp = Float.parseFloat(DPField.getText().replaceAll(",", ""));
        if (Box1.getSelectedItem() == "%") {
            dp = hp * (dp /100);
        }
        float lt = Float.parseFloat(LTField.getText().replaceAll(",", ""));
        float ir = Float.parseFloat(IRField.getText().replaceAll(",", "")) / 100;
        float i = ir / 12;
        float sd = Float.parseFloat(SDField.getText().replaceAll(",", ""));
        // n is the number of mortgage payments made
        float n = 12 * lt;
        // defines the loan amount as home price - down payment
        float la = hp - dp;
        //the actual calculation for monthly pay on a mortgage
        float mp = la / n;
        if (i != 0){
            mp = (float) (la / ((Math.pow(1 + i, n) - 1)  / (i * Math.pow(1 + i, n))));
        }
        // determines when loan is paid off
        float payoffDate = sd + lt;
        // determines total intrest accrued
        float totInt = (n * mp) - hp + dp ;
        
        mpLabel1.setText("$" + String.format("%,.2f" , mp));
        homePriceLabel1.setText("$" + String.format("%,.2f", hp));
        loanAmountLabel1.setText("$" + String.format("%,.2f", la));
        downPaymentLabel1.setText("$" + String.format("%,.2f", dp));
        numMPLabel.setText("Total of " + String.format("%,.0f", n) + " Mortgage Payments");
        numMPLabel1.setText("$" + String.format("%,.2f", n * mp));
        mPayoffLabel1.setText(MonthBox.getSelectedItem() + " " + String.format("%.0f", payoffDate));
        totalInterestLabel1.setText("$" + String.format("%,.2f", totInt));
        
        setResultsLabelsVisible();
        
    }//GEN-LAST:event_calcButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // clears all values from all input boxes
        HPField.setText("");
        HPField.requestFocus();
        DPField.setText("");
        LTField.setText("");
        IRField.setText("");
        SDField.setText("");
        setResultsLabelsNotVisible();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void HPFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_HPFieldFocusLost
        // checks for valid input
        // if all fields have an input, enable calcButton
        if (HPField.getText().strip().compareTo("") != 0) {
            if (! (MainHelper.isValidNumber(HPField.getText().replaceAll(",", ""))) 
                    || MainHelper.isZeroS(HPField.getText().replaceAll(",", ""))){
                HPField.setText("");
                HPField.requestFocus();
                calcButton.setEnabled(false);
                setResultsLabelsNotVisible();
            } 
            else {
                if (HPField.getText().strip().compareTo("") == 0){
                    DPField.requestFocus();
                }
                if (allFieldsHaveValue()) {
                    calcButton.setEnabled(true);
                }
            }
        } else{
            HPField.setText("0");
            if (allFieldsHaveValue()) {
                    calcButton.setEnabled(true);
                }
            }
    }//GEN-LAST:event_HPFieldFocusLost

    private void DPFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DPFieldKeyPressed
        // if "enter" key pressed, check if input is valid
        // if all fields have an input, enable calcButton
        if (evt.getKeyCode() == 10) {
            if (DPField.getText().strip().compareTo("") != 0) {
               if (! (MainHelper.isValidNumber(DPField.getText().replaceAll(",", "")))){
                    DPField.setText("");
                    DPField.requestFocus();
                    calcButton.setEnabled(false);
                    setResultsLabelsNotVisible();
                } else {
                   if (Box1.getSelectedItem() == "%" && Float.parseFloat(DPField.getText().replaceAll(",", "")) >= 100) {
                    DPField.setText("");
                    DPField.requestFocus();
                    calcButton.setEnabled(false);
                    setResultsLabelsNotVisible();
                } else {
                    LTField.requestFocus();
                    if (allFieldsHaveValue()){
                        calcButton.setEnabled(true);
                    }
                }
               }
            }
        }
    }//GEN-LAST:event_DPFieldKeyPressed

    private void DPFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DPFieldFocusLost
        // checks for valid input
        // if all fields have an input, enable calcButton
        if (DPField.getText().strip().compareTo("") != 0) {
            
            if (! (MainHelper.isValidNumber(DPField.getText().replaceAll(",", "")))){
                DPField.setText("");
                DPField.requestFocus();
                calcButton.setEnabled(false);
                setResultsLabelsNotVisible();
            } 
            else {
                if (Box1.getSelectedItem() == "%" && Float.parseFloat(DPField.getText().replaceAll(",", "")) >= 100) {
                    DPField.setText("");
                    DPField.requestFocus();
                    calcButton.setEnabled(false);
                    setResultsLabelsNotVisible();
                } else{
                if (DPField.getText().strip().compareTo("") == 0){
                    LTField.requestFocus();
                }
                if (allFieldsHaveValue()) {
                    calcButton.setEnabled(true);
                }
            }
            }
        }else{
            DPField.setText("0");
            if (allFieldsHaveValue()) {
                    calcButton.setEnabled(true);
                }
            }
    }//GEN-LAST:event_DPFieldFocusLost

    private void LTFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LTFieldKeyPressed
        // if "enter" key pressed, check if input is valid
        // if all fields have an input, enable calcButton
        if (evt.getKeyCode() == 10) {
            if (LTField.getText().strip().compareTo("") != 0) {
               if (! (MainHelper.isValidNumber(LTField.getText().replaceAll(",", ""))) 
                       || MainHelper.isZeroS(LTField.getText().replaceAll(",", ""))){
                    LTField.setText("");
                    LTField.requestFocus();
                    calcButton.setEnabled(false);
                    setResultsLabelsNotVisible();
                } 
               else {
                        IRField.requestFocus();
                    if (allFieldsHaveValue()) {
                        calcButton.setEnabled(true);
                    }
               }
            }
        }
    }//GEN-LAST:event_LTFieldKeyPressed

    private void LTFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_LTFieldFocusLost
        // checks for valid input
        // if all fields have an input, enable calcButton
        if (LTField.getText().strip().compareTo("") != 0) {
            if (! (MainHelper.isValidNumber(LTField.getText().replaceAll(",", ""))) 
                    || MainHelper.isZeroS(LTField.getText().replaceAll(",", ""))){
                LTField.setText("");
                LTField.requestFocus();
                calcButton.setEnabled(false);
                setResultsLabelsNotVisible();
            } 
            else {
                if (LTField.getText().strip().compareTo("") == 0){
                    IRField.requestFocus();
                }
                if (allFieldsHaveValue()) {
                    calcButton.setEnabled(true);
                }
            }
        }else{
            LTField.setText("0");
            if (allFieldsHaveValue()) {
                    calcButton.setEnabled(true);
                }
            }
    }//GEN-LAST:event_LTFieldFocusLost

    private void IRFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_IRFieldKeyPressed
        // if "enter" key pressed, check if input is valid
        // if all fields have an input, enable calcButton
        if (evt.getKeyCode() == 10) {
            if (IRField.getText().strip().compareTo("") != 0) {
               if (! (MainHelper.isValidNumber(IRField.getText().replaceAll(",", "")))){
                    IRField.setText("");
                    IRField.requestFocus();
                    calcButton.setEnabled(false);
                    setResultsLabelsNotVisible();
                } 
               else {
                    SDField.requestFocus();
                    if (allFieldsHaveValue()) {
                        calcButton.setEnabled(true);
                    }
               }
            }
        }
    }//GEN-LAST:event_IRFieldKeyPressed

    private void IRFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_IRFieldFocusLost
        // checks for valid input
        // if all fields have an input, enable calcButton
        if (IRField.getText().strip().compareTo("") != 0) {
            if (! (MainHelper.isValidNumber(IRField.getText().replaceAll(",", "")))){
                IRField.setText("");
                IRField.requestFocus();
                calcButton.setEnabled(false);
                setResultsLabelsNotVisible();
            } 
            else {
                if (IRField.getText().strip().compareTo("") == 0){
                    SDField.requestFocus();
                }
                if (allFieldsHaveValue()) {
                    calcButton.setEnabled(true);
                }
            }
        }else{
            IRField.setText("0");
            if (allFieldsHaveValue()) {
                    calcButton.setEnabled(true);
                }
            }
    }//GEN-LAST:event_IRFieldFocusLost

    private void SDFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SDFieldKeyPressed
        // if "enter" key pressed, check if input is valid
        // if all fields have an input, enable calcButton
        if (evt.getKeyCode() == 10) {
            if (SDField.getText().strip().compareTo("") != 0) {
               if (! (MainHelper.isValidNumber(SDField.getText().replaceAll(",", "")))){
                    SDField.setText("");
                    SDField.requestFocus();
                    calcButton.setEnabled(false);
                    setResultsLabelsNotVisible();
                } 
               else {
                    if (allFieldsHaveValue()) {
                        calcButton.setEnabled(true);
                    }
               }
            }
        }
    }//GEN-LAST:event_SDFieldKeyPressed

    private void SDFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SDFieldFocusLost
        // checks for valid input
        // if all fields have an input, enable calcButton
        if (SDField.getText().strip().compareTo("") != 0) {
            if (! (MainHelper.isValidNumber(SDField.getText().replaceAll(",", "")))){
                SDField.setText("");
                SDField.requestFocus();
                calcButton.setEnabled(false);
                setResultsLabelsNotVisible();
            } 
            else {
                if (allFieldsHaveValue()) {
                    calcButton.setEnabled(true);
                }
            }
        }else{
            SDField.setText("0");
            if (allFieldsHaveValue()) {
                    calcButton.setEnabled(true);
                }
            }
    }//GEN-LAST:event_SDFieldFocusLost

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    
    private void setResultsLabelsNotVisible() {
        mpLabel1.setVisible(false);
        numMPLabel1.setVisible(false);
        mPayoffLabel1.setVisible(false);
        totalInterestLabel1.setVisible(false);
        homePriceLabel1.setVisible(false);
        loanAmountLabel1.setVisible(false);
        downPaymentLabel1.setVisible(false);
    }
    
    private void setResultsLabelsVisible() {
        mpLabel1.setVisible(true);
        numMPLabel1.setVisible(true);
        mPayoffLabel1.setVisible(true);
        totalInterestLabel1.setVisible(true);
        homePriceLabel1.setVisible(true);
        loanAmountLabel1.setVisible(true);
        downPaymentLabel1.setVisible(true);
    }
    
    private boolean allFieldsHaveValue() {
        int hp = DPField.getText().strip().compareTo("");
        int dp = DPField.getText().strip().compareTo("");
        int lt = LTField.getText().strip().compareTo("");
        int ir = IRField.getText().strip().compareTo("");
        int sd = SDField.getText().strip().compareTo("");
        return hp != 0 && dp != 0 && lt != 0 && ir != 0 && sd != 0;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MortgageCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MortgageCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MortgageCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MortgageCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MortgageCalculator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Box1;
    private javax.swing.JLabel DP;
    private javax.swing.JTextField DPField;
    private javax.swing.JLabel HP;
    private javax.swing.JTextField HPField;
    private javax.swing.JLabel IR;
    private javax.swing.JTextField IRField;
    private javax.swing.JLabel LT;
    private javax.swing.JTextField LTField;
    private javax.swing.JLabel MainLabel;
    private javax.swing.JComboBox<String> MonthBox;
    private javax.swing.JLabel SD;
    private javax.swing.JTextField SDField;
    private javax.swing.JButton calcButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel downPaymentLabel;
    private javax.swing.JLabel downPaymentLabel1;
    private javax.swing.JLabel homePriceLabel;
    private javax.swing.JLabel homePriceLabel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel loanAmountLabel;
    private javax.swing.JLabel loanAmountLabel1;
    private javax.swing.JLabel mPayoffLabel;
    private javax.swing.JLabel mPayoffLabel1;
    private javax.swing.JLabel mpLabel;
    private javax.swing.JLabel mpLabel1;
    private javax.swing.JLabel numMPLabel;
    private javax.swing.JLabel numMPLabel1;
    private javax.swing.JLabel totalInterestLabel;
    private javax.swing.JLabel totalInterestLabel1;
    // End of variables declaration//GEN-END:variables
}
